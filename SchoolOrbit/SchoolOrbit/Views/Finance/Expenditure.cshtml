@model IEnumerable<DomainModel.BusinessLayer.Expense>

@{
    ViewBag.Title = "Expenditure";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>
        Expenditure List
        <small></small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-star"></i> Expenditure</a></li>
        <li class="active">List</li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-aqua"><i class="fa fa-inr"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text" id="spnMTHName"></span>
                    <span class="info-box-number" id="spnMTHExp"></span>
                </div><!-- /.info-box-content -->
            </div><!-- /.info-box -->
        </div><!-- /.col -->
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="info-box">
                <span class="info-box-icon bg-red"><i class="fa fa-inr"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Total Expenditure</span>
                    <span class="info-box-number" id="spnYTDExp"></span>
                </div><!-- /.info-box-content -->
            </div><!-- /.info-box -->
        </div><!-- /.col -->
        </div>
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Expenditure [
                    @Html.ActionLink("Create New", "CreateExpenditure")

                    ]
                </h3>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            @using (@Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline" }))
                            {
                                <div class="col-sm-10">

                                    <div class="form-group">
                                        <label for="minExpDate">From Date :</label>
                                        <input type="text" class="form-control" id="minExpDate" name="minExpDate" placeholder="From Date">
                                    </div>
                                    <div class="form-group">
                                        <label for="maxExpDate">To Date:</label>
                                        <input type="text" class="form-control" id="maxExpDate" name="maxExpDate" placeholder="To Date">
                                    </div>
                                    <button type="submit" class="btn btn-default" id="btnSearch" onclick="return chkDates();">Search</button>
                                    <a href="ExportExpenses"><i class="fa fa-download"></i> &nbsp; Export to Excel </a>


                                </div>

                            }
                        </div>
                    </div>
                    <br/>
                            <div class="row">
                                <table class="table table-bordered table-striped" id="tblexpense">
                                    <thead>
                                        <tr>


                                            <th>
                                                @Html.DisplayNameFor(model => model.expense_date)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.amount)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.remarks)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.expense_type)
                                            </th>
                                            <th></th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                        @foreach (var item in Model)
                                    {
                                            <tr>

                                                <td>
                                                    @Html.DisplayFor(modelItem => item.expense_date)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.amount)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.remarks)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.expense_type)
                                                </td>
                                                <td>
                                                    @Html.ActionLink("Edit", "EditExpenditure", new { id = item.id }) |
                                                    @Html.ActionLink("Details", "ExpTranDetails", new { id = item.id }) |
                                                    @Html.ActionLink("Delete", "ExpTranDelete", new { id = item.id })
                                                </td>
                                            </tr>
                                    }
                                    </tbody>

                                </table>
                            </div>
                       
                   
                </div>
            </div>
        </div>
</section>
<script type="text/javascript">
    //$.fn.dataTable.ext.search.push(
    //function (settings, data, dataIndex) {
    //   // if ($('#minExpDate').val() != "" || $('#maxExpDate').val() !="") {
    //        var etpDt = 0;
    //        var minDt = 0;
    //        var maxDt = 0;
    //        if ($('#minExpDate').val() != "") {
    //            minDt = Date.parse($('#minExpDate').val());
    //        }
    //        if ($('#maxExpDate').val() != "") {
    //            maxDt = Date.parse($('#maxExpDate').val());
    //        }
    //        if (data[0] != "") {
    //            etpDt = Date.parse(data[0]); // use data for the age column
    //        }
    //        if (minDt == 0 && maxDt == 0) {
    //            return true;
    //        }
    //        else if (minDt == 0 && etpDt < maxDt) {
    //            return true;
    //        }
    //        else if (minDt <= etpDt && 0 == maxDt) {
    //            return true;
    //        }
    //        else if (minDt <= etpDt && etpDt <= maxDt) {
    //            return true;
    //        }
    //        return false;
    //    }

    //}
//);
    $(document).ready(function () {
        var table = $('#tblexpense').DataTable({
            "order": []
        });
        getSubItems();
         function getSubItems() {
            $.get("@Url.Action("GetDashboardSubItems")",
                function(data){
                    if(data != ""){
                        strdata = data.split(",");
                        $("#spnMTHName").text(strdata[0] + " " + "Expenditure");
                        $("#spnMTHExp").text(strdata[1]);
                        $("#spnYTDExp").text(strdata[2]);
                    }
                }
             );
        }
        //$("#tblexpense").DataTable({
        //    "columnDefs": [{ "searchable": false, "targets": [0, 1] }],
        //    initComplete: function () {
        //        this.api().columns().every( function () {
        //            var column = this;
        //            var select = $('<select><option value=""></option></select>')
        //                .appendTo( $(column.footer()).empty() )
        //                .on( 'change', function () {
        //                    var val = $.fn.dataTable.util.escapeRegex(
        //                        $(this).val()
        //                    );

        //                    column
        //                        .search( val ? '^'+val+'$' : '', true, false )
        //                        .draw();
        //                } );

        //            column.data().unique().sort().each( function ( d, j ) {
        //                select.append( '<option value="'+d+'">'+d+'</option>' )
        //            } );
        //        } );
        //    }
        //});
        //$('#minExpDate').change(function () { table.draw(); });
        //$('#maxExpDate').change(function () { table.draw(); });
     });
    $("#minExpDate").datepicker({
        dateFormat:"dd-mm-yy"
    });
    $("#maxExpDate").datepicker({
        dateFormat: "dd-mm-yy"
    });
    function chkDates() {
        var blnFlg = true;
        if ($("#minExpDate").val() == "") {
            alert("Enter From Date");
            blnFlg = false;
        }
        if ($("#maxExpDate").val() == "") {
            alert("Enter To Date");
            blnFlg = false;
        }
        if ($("#minExpDate").val() != "" && $("#maxExpDate").val() != "") {
            var minExpDate = $("#minExpDate").val();
            var maxExpDate = $("#maxExpDate").val();
            minExpDate = minExpDate.split('-');
            maxExpDate = maxExpDate.split('-');

            var newMinDate = new Date(minExpDate[2], minExpDate[1] - 1, minExpDate[0]);
            var newMaxDate = new Date(maxExpDate[2], maxExpDate[1] - 1, maxExpDate[0]);
            if (newMaxDate.getTime() < newMinDate.getTime()) {
                alert("From Date should be less than To Date");
                blnFlg = false;
            }
        }
        return blnFlg;
    }
</script>